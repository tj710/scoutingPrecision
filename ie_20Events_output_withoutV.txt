iter=0
Inputs: [0.8819444  0.32735425 0.14117648 1.        ]
output onnxruntime = [[-0.65100974 -0.3396692   0.7423121 ]
 [ 0.63533837 -0.29265544 -0.7038157 ]
 [ 0.52584225 -0.3949969   0.8871108 ]
 [-0.44709542  0.2460481   1.3241901 ]
 [-0.35250923 -0.03215147 -1.3875067 ]
 [ 0.4673328  -0.22992995 -0.5791177 ]
 [-0.39941424  0.25647542 -0.03457716]
 [-0.39014712 -0.02987561  0.16694069]
 [-0.54631436  0.12683386 -0.4845107 ]
 [-0.6512008   0.13503036 -0.5344838 ]
 [ 0.80706793  0.3302896  -0.9587351 ]
 [-0.6394154  -0.27007648 -0.53905034]
 [ 0.2746712  -0.12620273  0.18360996]
 [ 0.61813176 -0.4510822  -0.69237244]
 [-0.28452095  0.14671735  0.24897611]
 [-0.86383945  0.4956072  -0.68301296]
 [-0.28030103  0.37529057 -1.4108161 ]
 [ 0.79953116  0.04469784 -0.9504026 ]
 [-0.5076956   0.43742013 -0.28895742]
 [-0.4126673  -0.0464189   0.16541606]]
output MicronDLA = [[-0.625, -0.34375, 0.67578125], [0.65625, -0.328125, -0.71875], [0.55078125, -0.3984375, 0.83203125], [-0.4453125, 0.23828125, 1.2617188], [-0.31640625, -0.109375, -1.3828125], [0.48046875, -0.3046875, -0.58203125], [-0.40234375, 0.2421875, -0.05078125], [-0.37890625, -0.01953125, 0.15234375], [-0.546875, 0.08984375, -0.4921875], [-0.63671875, 0.11328125, -0.546875], [0.7890625, 0.26953125, -0.9453125], [-0.62890625, -0.2890625, -0.5390625], [0.296875, -0.1640625, 0.16015625], [0.6328125, -0.5, -0.68359375], [-0.2734375, 0.1484375, 0.2109375], [-0.859375, 0.45703125, -0.69140625], [-0.27734375, 0.3046875, -1.3710938], [0.80078125, 0.0078125, -0.9609375], [-0.5, 0.421875, -0.31640625], [-0.41015625, -0.0390625, 0.15625]]
===================================
iter=20
Inputs: [0.02604167 0.3721973  0.04705882 1.        ]
output onnxruntime = [[-0.5413888  -0.26659307 -0.43771797]
 [-0.5438866  -0.04116222 -0.45777717]
 [ 0.30397594  0.19720273  0.06974034]
 [ 0.44614807 -0.21446466 -0.56975853]
 [ 0.37414736  0.19457883  0.0494802 ]
 [ 0.33521798  0.1651121  -0.03118339]
 [-0.3241366   0.2074841   0.19604972]
 [-0.3861901   0.00123053 -0.23499277]
 [-0.4227667  -0.04990933  0.08068769]
 [-0.6345598   0.64161444 -0.5283451 ]
 [ 0.7908583  -0.02866323 -0.94102216]
 [ 0.09456653 -0.03776217  0.28556746]
 [ 0.7876916   0.3212362  -0.9634106 ]
 [-0.42330492  0.01674315 -0.02022618]
 [ 0.31472784 -0.11024819  0.1657137 ]
 [ 0.7696268   0.49947047 -0.9415008 ]
 [ 0.383281   -0.20206109 -0.2964533 ]
 [-0.26942375  0.14175723  0.53172493]
 [-0.9553616   0.42545253 -0.90740216]
 [ 0.77701014 -0.23136696 -0.8974246 ]]
output MicronDLA = [[-0.52734375, -0.3203125, -0.4375], [-0.53515625, -0.0625, -0.46875], [0.34375, 0.16796875, 0.04296875], [0.48046875, -0.2578125, -0.57421875], [0.41015625, 0.140625, 0.03515625], [0.359375, 0.12890625, -0.0703125], [-0.33203125, 0.203125, 0.1796875], [-0.37890625, 0.0, -0.25], [-0.41015625, -0.0859375, 0.06640625], [-0.609375, 0.6015625, -0.5234375], [0.8125, -0.08984375, -0.94140625], [0.12109375, -0.0703125, 0.2421875], [0.78125, 0.26171875, -0.98046875], [-0.4296875, -0.015625, -0.015625], [0.34765625, -0.17578125, 0.15625], [0.78125, 0.4375, -0.94140625], [0.40625, -0.2265625, -0.30859375], [-0.26953125, 0.13671875, 0.49609375], [-0.94921875, 0.40234375, -0.8828125], [0.78515625, -0.28125, -0.890625]]
===================================
iter=40
Inputs: [0.46006945 0.61210763 0.04705882 1.        ]
output onnxruntime = [[-0.5481211   0.49518037 -0.4713721 ]
 [-0.7764177  -0.49689487 -0.6538541 ]
 [-0.55149424  0.6204115  -0.4555703 ]
 [-0.3168709   0.07384574 -1.4351554 ]
 [ 0.5278503   0.5145601   0.5302552 ]
 [ 0.6771875  -0.19578618 -0.73381543]
 [ 0.358232    0.08403482 -1.3285623 ]
 [-0.42234346 -0.10962353 -0.24034743]
 [-0.42101958 -0.06092194 -0.35424107]
 [-0.9750941   0.40045956 -0.8913983 ]
 [ 0.34900326 -0.12532881 -0.02461527]
 [ 0.3382745  -0.09248363 -0.16310835]
 [-0.38886303  0.23182851 -0.3485232 ]
 [ 0.36579964 -0.22269043 -0.36002392]
 [-0.49779478 -0.12644541  1.1390936 ]
 [-0.6842114  -0.36647066  0.6885767 ]
 [ 0.6344953  -0.3834368  -0.70241153]
 [ 0.65609103  0.14814219 -0.74533343]
 [-0.29415953  0.17343315  1.0507405 ]
 [-0.49533865  0.36316797 -0.33119413]]
output MicronDLA = [[-0.53125, 0.47265625, -0.48046875], [-0.74609375, -0.53125, -0.640625], [-0.53125, 0.58984375, -0.44921875], [-0.27734375, 0.0, -1.421875], [0.54296875, 0.4765625, 0.48046875], [0.69140625, -0.2421875, -0.73828125], [0.375, 0.015625, -1.3359375], [-0.4375, -0.15625, -0.234375], [-0.4140625, -0.08203125, -0.3671875], [-0.94140625, 0.33984375, -0.89453125], [0.3828125, -0.17578125, -0.03515625], [0.3671875, -0.14453125, -0.16796875], [-0.3828125, 0.1953125, -0.34765625], [0.390625, -0.265625, -0.37109375], [-0.484375, -0.17578125, 1.0273438], [-0.671875, -0.36328125, 0.66796875], [0.6640625, -0.44140625, -0.71875], [0.68359375, 0.109375, -0.76171875], [-0.296875, 0.1640625, 0.98828125], [-0.50390625, 0.3515625, -0.3359375]]
===================================
iter=60
Inputs: [0.1892361  0.51793724 0.15294118 0.        ]
output onnxruntime = [[ 0.277295    0.1216253   0.06685399]
 [-0.4686577  -0.14520264 -0.03820825]
 [ 0.37459353  0.13913691 -0.49012437]
 [-0.37636614  0.26213595  0.08939937]
 [ 0.31553376  0.00809144 -1.3871391 ]
 [ 0.38874283 -0.23929414 -0.46861598]
 [ 0.4118176  -0.29155263 -0.45085618]
 [ 0.4656189   0.5377459  -0.57904613]
 [ 0.28382677  0.01479097 -0.3474399 ]
 [-0.44262978 -0.07848588  0.3893412 ]
 [ 0.40068147 -0.29322523 -0.45832753]
 [-0.53095466  0.53415203 -0.17164035]
 [ 0.32146338  0.06795616  0.00612761]
 [-0.47687903 -0.09031657  1.2353307 ]
 [-0.61298376 -0.36041975  0.2176595 ]
 [ 0.24027438  0.18201247  1.0604624 ]
 [ 0.3803777   0.381869   -0.30754995]
 [-0.8428055   0.7811358  -0.6515584 ]
 [ 0.3182244   0.102068   -0.42118105]
 [ 0.16478519  0.27368826 -1.4828274 ]]
output MicronDLA = [[0.29296875, 0.0859375, 0.046875], [-0.453125, -0.16015625, -0.0703125], [0.38671875, 0.08984375, -0.48046875], [-0.3984375, 0.22265625, 0.07421875], [0.3359375, -0.0625, -1.390625], [0.4140625, -0.2890625, -0.47265625], [0.421875, -0.32421875, -0.453125], [0.46875, 0.49609375, -0.578125], [0.30078125, -0.0390625, -0.34375], [-0.4375, -0.08203125, 0.375], [0.421875, -0.32421875, -0.45703125], [-0.51953125, 0.4921875, -0.203125], [0.3359375, 0.0234375, -0.01953125], [-0.48046875, -0.1171875, 1.1484375], [-0.59375, -0.37109375, 0.21875], [0.23828125, 0.16796875, 0.98046875], [0.3984375, 0.3359375, -0.31640625], [-0.83203125, 0.73828125, -0.6328125], [0.34375, 0.03125, -0.42578125], [0.1640625, 0.265625, -1.4804688]]
===================================
iter=80
Inputs: [0.046875   0.41255605 0.24705882 0.        ]
output onnxruntime = [[ 0.13417591 -0.03571672  0.50556135]
 [ 0.45856604  0.47877383 -0.5777157 ]
 [ 0.38096038  0.22288033  0.11496454]
 [ 0.6645269   0.09485977 -0.74002504]
 [-0.451147    0.35383177  0.23425174]
 [-0.3886902  -0.03830125  0.17919388]
 [-0.87623984 -0.03895753 -0.7118293 ]
 [-0.38845423  0.03738709 -0.15395151]
 [-0.33340305  0.25452307 -1.4474694 ]
 [ 0.45050678  0.42532963 -0.5787984 ]
 [-0.40504715 -0.04023238 -0.20229605]
 [ 0.35321647 -0.09333558  0.05552478]
 [-0.3923515  -0.00999515  0.13400647]
 [ 0.18654181  0.17542812 -1.4741104 ]
 [-0.3780305  -0.04063248  0.5086503 ]
 [-0.4563591   0.29773083 -0.16884756]
 [-0.4959716   0.41125903 -0.41284078]
 [-0.28970698  0.19262516 -1.4674028 ]
 [-0.6415956   0.5544525  -0.53225255]
 [ 0.37569073  0.08537742  0.10298872]]
output MicronDLA = [[0.15234375, -0.08203125, 0.4453125], [0.46484375, 0.4296875, -0.59765625], [0.41015625, 0.1796875, 0.1015625], [0.68359375, 0.046875, -0.7421875], [-0.44140625, 0.34765625, 0.23046875], [-0.390625, -0.0546875, 0.15625], [-0.8515625, -0.0703125, -0.6953125], [-0.390625, 0.0078125, -0.171875], [-0.3125, 0.20703125, -1.4257812], [0.44921875, 0.3828125, -0.58203125], [-0.40234375, -0.04296875, -0.19921875], [0.38671875, -0.140625, 0.015625], [-0.390625, -0.0078125, 0.1171875], [0.23046875, 0.125, -1.453125], [-0.3515625, -0.046875, 0.41796875], [-0.453125, 0.27734375, -0.1953125], [-0.50390625, 0.390625, -0.41796875], [-0.28125, 0.14453125, -1.4570312], [-0.62109375, 0.51171875, -0.51953125], [0.3984375, 0.046875, 0.0703125]]
===================================
iter=100
Inputs: [0.40104166 0.67713004 0.10588235 1.        ]
output onnxruntime = [[-0.58269674  0.52586895  0.33783755]
 [ 0.14078932  0.35437632 -1.4902811 ]
 [-0.80815876 -0.32390133 -0.6704303 ]
 [ 0.32474956  0.16858411 -0.12031855]
 [-0.37539628  0.14040259 -0.1045126 ]
 [ 0.38917038  0.41633403 -0.30686802]
 [-0.38258243  0.24788049 -0.2698982 ]
 [ 0.36878875 -0.20791098 -0.36976466]
 [ 0.3061361  -0.02707727 -0.41962638]
 [-0.29184172  0.15281601  0.44896963]
 [-0.335136    0.18282935  1.601345  ]
 [ 0.32199118  0.06891634  0.00888056]
 [ 0.37290123 -0.20553502 -0.29319865]
 [-0.4598634  -0.05580545 -0.40478748]
 [-0.4173584  -0.04519371 -0.36345676]
 [ 0.11345774  0.14836873  0.19310275]
 [ 0.4964398  -0.33596915  0.55362475]
 [-0.5179655   0.47663784 -0.2571858 ]
 [ 0.3810942   0.4118977  -0.4074361 ]
 [-0.44902667  0.30472773 -0.3801453 ]]
output MicronDLA = [[-0.5546875, 0.5, 0.30078125], [0.1484375, 0.3203125, -1.4921875], [-0.78125, -0.38671875, -0.65625], [0.35546875, 0.11328125, -0.140625], [-0.36328125, 0.14453125, -0.11328125], [0.40234375, 0.39453125, -0.328125], [-0.3671875, 0.23046875, -0.28125], [0.3828125, -0.28125, -0.3828125], [0.30859375, -0.046875, -0.4375], [-0.30078125, 0.140625, 0.3984375], [-0.33203125, 0.1875, 1.53125], [0.3671875, 0.01953125, -0.02734375], [0.39453125, -0.2421875, -0.3046875], [-0.4453125, -0.08203125, -0.4140625], [-0.4140625, -0.06640625, -0.37890625], [0.12890625, 0.109375, 0.14453125], [0.51171875, -0.3359375, 0.48828125], [-0.50390625, 0.45703125, -0.2734375], [0.38671875, 0.36328125, -0.43359375], [-0.4453125, 0.2734375, -0.39453125]]
===================================
iter=120
Inputs: [0.25520834 0.5156951  0.24705882 1.        ]
output onnxruntime = [[-0.26815423  0.13530837  0.3294102 ]
 [ 0.45790294  0.47248966 -0.5770494 ]
 [ 0.34763697  0.04986825  0.12799263]
 [ 0.6537014  -0.21486402 -0.7235373 ]
 [ 0.31260118 -0.01995429 -0.23680475]
 [-0.63832515 -0.32150975 -0.5399171 ]
 [ 0.36079216 -0.1152368   0.08424231]
 [-0.44805062  0.17172885 -0.44882333]
 [ 0.39793566  0.26358858 -0.49833393]
 [-0.39131173 -0.02074569 -0.22629619]
 [ 0.63812137 -0.31149617 -0.7070235 ]
 [-0.6509307   0.4611114  -0.53746545]
 [ 0.4386174   0.4396103   0.5614085 ]
 [-0.437138    0.27626118 -0.19083996]
 [-0.4360081  -0.16623098 -0.2050241 ]
 [ 0.6318052  -0.3231303  -0.7024976 ]
 [ 0.4834336   0.70108294 -0.3164576 ]
 [-0.46352237 -0.23781198 -0.25137252]
 [-0.4276902  -0.05991269 -0.04102166]
 [ 0.39777267 -0.37657797 -0.44084218]]
output MicronDLA = [[-0.28515625, 0.1328125, 0.296875], [0.46484375, 0.4375, -0.59375], [0.3828125, -0.00390625, 0.1015625], [0.66796875, -0.265625, -0.71484375], [0.35546875, -0.0703125, -0.2421875], [-0.625, -0.34375, -0.5390625], [0.375, -0.16015625, 0.06640625], [-0.45703125, 0.13671875, -0.44921875], [0.40234375, 0.18359375, -0.51171875], [-0.37890625, -0.0390625, -0.2421875], [0.65625, -0.37890625, -0.71484375], [-0.625, 0.4140625, -0.5234375], [0.46484375, 0.40234375, 0.5234375], [-0.43359375, 0.2734375, -0.203125], [-0.4296875, -0.18359375, -0.21484375], [0.65625, -0.37890625, -0.71484375], [0.484375, 0.6484375, -0.35546875], [-0.44921875, -0.28515625, -0.2734375], [-0.42578125, -0.06640625, -0.05859375], [0.41796875, -0.390625, -0.4296875]]
===================================
iter=140
Inputs: [0.9479167  0.59641254 0.         0.        ]
output onnxruntime = [[ 0.3224271  -0.05200935 -1.3964957 ]
 [-0.37106085  0.25475296  0.13859901]
 [-0.49514493  0.36276087 -0.32990718]
 [ 0.39263356 -0.13277009  0.03583558]
 [ 0.3420466  -0.1244882  -0.3531307 ]
 [ 0.34690174 -0.13415936 -0.13795641]
 [ 0.3986063  -0.31359932 -0.45634112]
 [ 0.42862168  0.5036137  -0.5112691 ]
 [-0.63494766 -0.3679887  -0.5358325 ]
 [ 0.41233486  0.31274018  0.05822152]
 [-0.6498729   0.07853747 -0.5374365 ]
 [-0.54946953  0.4489412  -0.4760172 ]
 [-0.47985947  0.3579228   0.11316547]
 [ 0.2259944   0.09663754 -1.4560311 ]
 [ 0.44905108 -0.33096766  0.8168323 ]
 [-0.43175068 -0.0774013  -0.0115198 ]
 [ 0.47446933  0.41031256  0.35260513]
 [-0.4498217   0.10403852  2.97932   ]
 [ 0.34954515 -0.15859464 -0.35210404]
 [ 0.2928507   0.13727993  0.01292273]]
output MicronDLA = [[0.3359375, -0.12890625, -1.40625], [-0.36328125, 0.24609375, 0.125], [-0.49609375, 0.3515625, -0.3359375], [0.421875, -0.16796875, 0.03125], [0.3515625, -0.16796875, -0.37109375], [0.36328125, -0.171875, -0.1484375], [0.41796875, -0.36328125, -0.45703125], [0.44140625, 0.47265625, -0.5234375], [-0.609375, -0.39453125, -0.5390625], [0.42578125, 0.265625, 0.03515625], [-0.64453125, 0.0625, -0.52734375], [-0.5390625, 0.41796875, -0.47265625], [-0.45703125, 0.33203125, 0.08984375], [0.23046875, 0.06640625, -1.4609375], [0.4609375, -0.3671875, 0.7421875], [-0.4296875, -0.109375, -0.0390625], [0.50390625, 0.3671875, 0.31640625], [-0.46484375, 0.10546875, 2.9414062], [0.37109375, -0.2109375, -0.359375], [0.32421875, 0.08984375, -0.0234375]]
===================================
iter=160
Inputs: [0.33854166 0.3632287  0.04705882 1.        ]
output onnxruntime = [[-0.54008085 -0.28910545 -0.4297462 ]
 [-0.27929667  0.03530118  0.5147785 ]
 [ 0.35632378  0.23674417 -0.08529881]
 [-0.54381543  0.09373189 -0.47908473]
 [-0.4214163   0.26032335 -0.11142628]
 [-0.54583746  0.16360942 -0.48788488]
 [-0.39350465  0.00105571 -0.31321427]
 [ 0.45990202  0.49136454 -0.5790057 ]
 [-0.54658616  0.5195929  -0.46516982]
 [ 0.33211225  0.02260479 -0.0503463 ]
 [-0.41817278 -0.04574544 -0.3641324 ]
 [-0.54210335 -0.23598677 -0.4413118 ]
 [-0.9103828  -0.11427286 -0.89946187]
 [ 0.3769458  -0.12377737  0.10044542]
 [-0.5513385   0.543605   -0.46798575]
 [ 0.28343233  0.01246477 -0.35103902]
 [-0.4381834  -0.03161169  1.0478423 ]
 [ 0.47632483 -0.33951804  0.64908063]
 [-0.4501128  -0.16021776 -0.30284756]
 [-0.44163582  0.27171454 -0.07985525]]
output MicronDLA = [[-0.53515625, -0.32421875, -0.4375], [-0.29296875, 0.015625, 0.484375], [0.39453125, 0.1953125, -0.10546875], [-0.5390625, 0.078125, -0.484375], [-0.390625, 0.24609375, -0.1328125], [-0.546875, 0.1484375, -0.4921875], [-0.390625, -0.0078125, -0.32421875], [0.46484375, 0.45703125, -0.58203125], [-0.54296875, 0.515625, -0.46484375], [0.34375, -0.03515625, -0.0703125], [-0.40625, -0.0625, -0.37109375], [-0.5234375, -0.23828125, -0.4453125], [-0.875, -0.16015625, -0.90234375], [0.41015625, -0.1640625, 0.0859375], [-0.54296875, 0.53125, -0.46484375], [0.30078125, -0.0390625, -0.34375], [-0.453125, -0.06640625, 0.9921875], [0.4921875, -0.31640625, 0.58984375], [-0.4453125, -0.1875, -0.30859375], [-0.44140625, 0.26171875, -0.0859375]]
===================================
iter=180
Inputs: [0.7586806  0.42152467 0.02352941 0.        ]
output onnxruntime = [[ 0.6504777  -0.24618489 -0.71617615]
 [-0.3268177   0.22977579  0.08615568]
 [-0.35006234  0.24452192  0.22716632]
 [ 0.40148294 -0.29704747 -0.45705447]
 [ 0.3450661  -0.13055643 -0.13416983]
 [ 0.39744347 -0.2802026  -0.4610424 ]
 [ 0.19067669  0.12604594  0.8760148 ]
 [ 0.35034615 -0.10782617 -0.03409135]
 [ 0.41057616 -0.15236536  0.06648633]
 [-1.0252701   0.09198996 -0.9214703 ]
 [ 0.40888634 -0.4173583  -0.43248287]
 [ 0.36867335 -0.20708469 -0.36829367]
 [-0.5060614  -0.17334849  0.5934309 ]
 [ 0.7794046   0.41391507 -0.9594121 ]
 [-0.48713455  0.3376101  -0.42253357]
 [-0.3968086   0.25922346 -0.25358826]
 [-0.4040881   0.01305546 -0.39031494]
 [ 0.3473666   0.16681343 -0.09110672]
 [-0.46240667  0.32703093 -0.3741541 ]
 [ 0.4547414   0.29596218 -0.581913  ]]
output MicronDLA = [[0.6796875, -0.27734375, -0.71484375], [-0.3359375, 0.2265625, 0.06640625], [-0.36328125, 0.2265625, 0.203125], [0.41015625, -0.3203125, -0.4609375], [0.37109375, -0.17578125, -0.16796875], [0.41015625, -0.30859375, -0.4609375], [0.203125, 0.1015625, 0.78515625], [0.37109375, -0.16015625, -0.04296875], [0.40625, -0.171875, 0.0546875], [-0.953125, 0.0234375, -0.91796875], [0.421875, -0.4296875, -0.44140625], [0.3828125, -0.26171875, -0.38671875], [-0.49609375, -0.17578125, 0.57421875], [0.7734375, 0.33984375, -0.96875], [-0.4765625, 0.30078125, -0.4375], [-0.390625, 0.25390625, -0.2734375], [-0.390625, -0.0234375, -0.40234375], [0.375, 0.10546875, -0.109375], [-0.4609375, 0.29296875, -0.375], [0.47265625, 0.25, -0.58984375]]
===================================
iter=200
Inputs: [0.484375   0.64349777 0.15294118 0.        ]
output onnxruntime = [[ 0.36753765  0.36648837  0.5189656 ]
 [ 0.6230652   0.37380606 -0.7255281 ]
 [-0.85940367  0.10715815 -0.7069707 ]
 [-0.5497114   0.16695595 -0.49117896]
 [ 0.2319821   0.17988454  1.05256   ]
 [-0.39002684  0.30557087  0.29312646]
 [ 0.3423819  -0.00350945 -0.01873259]
 [-0.28958374  0.36337668 -1.3935513 ]
 [-0.8524507  -0.15646002 -0.6996621 ]
 [-0.63209635 -0.3370782   0.37188378]
 [-0.45123556  0.29021418 -0.17315733]
 [ 0.8088423   0.3313841  -0.9574264 ]
 [-0.3291817  -0.0432534  -1.4014975 ]
 [-0.8714298   0.46312416 -0.6929151 ]
 [-0.39500675  0.23812783 -0.11951873]
 [ 0.43795562  0.5883502  -0.24969354]
 [ 0.31856373 -0.0699947  -1.4080381 ]
 [-0.543966   -0.36260208 -0.408204  ]
 [-0.50532675  0.33264017 -0.06639775]
 [-0.54178107  0.5825012  -0.10041319]]
output MicronDLA = [[0.40625, 0.328125, 0.4765625], [0.62890625, 0.34765625, -0.734375], [-0.83984375, 0.05078125, -0.703125], [-0.54296875, 0.12890625, -0.48828125], [0.234375, 0.171875, 0.9921875], [-0.37890625, 0.265625, 0.23046875], [0.36328125, -0.078125, -0.0234375], [-0.24609375, 0.328125, -1.3710938], [-0.8125, -0.20703125, -0.69921875], [-0.58984375, -0.328125, 0.32421875], [-0.45703125, 0.26171875, -0.1953125], [0.796875, 0.265625, -0.9375], [-0.29296875, -0.12109375, -1.390625], [-0.83984375, 0.41796875, -0.6796875], [-0.38671875, 0.2109375, -0.1328125], [0.44921875, 0.54296875, -0.28125], [0.3359375, -0.14453125, -1.4023438], [-0.53125, -0.37890625, -0.37890625], [-0.515625, 0.296875, -0.10546875], [-0.54296875, 0.55078125, -0.11328125]]
===================================


TERMINAL RUN OUTPUT
ie_compile: Parse the model and compile into fwdnxt instructions 
Input model read is integer_scouting_15_4_2020_without_BN.onnx
fwdnxt binary write to save.bin 
-----------------------------------------------------------
WARNING: Unsupported node type Identity, substituting with dropout
WARNING in new_convnode: node 0. The original inP 1 will be changed to inP 4
WARNING in new_convnode: node 0. inWxinP 16 will be padded to 64 to align input data accesses
type conv id=0 in=(Z1,H1,W4,P1) out=(Z1,H1,W1,P32) k=(Z1,H1,W4) stride=(Z1,H1,W1) dilation=(Z1,H1,W1) pad=(Z0,Ze0,T0,B0,R0,L0) opad=(Z0,H0,W0) 0->1
WARNING in new_convnode: node 1. inWxinP 32 will be padded to 64 to align input data accesses
type conv id=1 in=(Z1,H1,W1,P32) out=(Z1,H1,W1,P32) k=(Z1,H1,W1) stride=(Z1,H1,W1) dilation=(Z1,H1,W1) pad=(Z0,Ze0,T0,B0,R0,L0) opad=(Z0,H0,W0) 1->2
WARNING in new_convnode: node 2. inWxinP 32 will be padded to 64 to align input data accesses
type conv id=2 in=(Z1,H1,W1,P32) out=(Z1,H1,W1,P32) k=(Z1,H1,W1) stride=(Z1,H1,W1) dilation=(Z1,H1,W1) pad=(Z0,Ze0,T0,B0,R0,L0) opad=(Z0,H0,W0) 2->3
WARNING in new_convnode: node 3. inWxinP 32 will be padded to 64 to align input data accesses
type conv id=3 in=(Z1,H1,W1,P32) out=(Z1,H1,W1,P3) k=(Z1,H1,W1) stride=(Z1,H1,W1) dilation=(Z1,H1,W1) pad=(Z0,Ze0,T0,B0,R0,L0) opad=(Z0,H0,W0) 3->4
LIST:
inSz_max: 0, numin 0, numout: 0
 type conv id=0 in=(Z1,H1,W4,P1) out=(Z1,H1,W1,P32) k=(Z1,H1,W4) stride=(Z1,H1,W1) dilation=(Z1,H1,W1) pad=(Z0,Ze0,T0,B0,R0,L0) opad=(Z0,H0,W0) 0->1
  type conv id=1 in=(Z1,H1,W1,P32) out=(Z1,H1,W1,P32) k=(Z1,H1,W1) stride=(Z1,H1,W1) dilation=(Z1,H1,W1) pad=(Z0,Ze0,T0,B0,R0,L0) opad=(Z0,H0,W0) 1->2
  type conv id=2 in=(Z1,H1,W1,P32) out=(Z1,H1,W1,P32) k=(Z1,H1,W1) stride=(Z1,H1,W1) dilation=(Z1,H1,W1) pad=(Z0,Ze0,T0,B0,R0,L0) opad=(Z0,H0,W0) 2->3
  type conv id=3 in=(Z1,H1,W1,P32) out=(Z1,H1,W1,P3) k=(Z1,H1,W1) stride=(Z1,H1,W1) dilation=(Z1,H1,W1) pad=(Z0,Ze0,T0,B0,R0,L0) opad=(Z0,H0,W0) 3->4
WARNING in new_convnode: node 0 INDP mode. The original outP is 32 will be changed to 64 we will add 32 of padding
WARNING in new_convnode: node 1 INDP mode. The original outP is 32 will be changed to 64 we will add 32 of padding
WARNING in new_convnode: node 2 INDP mode. The original outP is 32 will be changed to 64 we will add 32 of padding
WARNING in new_convnode: node 3 INDP mode. The original outP is 3 will be changed to 64 we will add 61 of padding
 LIST:
inSz_max: 1280, numin 1, numout: 1
 SFT_SpConv INDP id 0 in=(Z1, H1, W4, P4) out=(Z1, H1, W1, P64) k=Z1xH1xW4 d=Z1xH1xW1 p=Z0Ze0xT0B0xL0R0
img 1, out_ret 0, swrun 0 nonlin relu resadd 0 nmfmp : 1
nOutPorig 32, nOutPmfm 32, nOutP 64, nOutPmem 64
 nInPmem 4, inPBstride 0, nOutPB 1, nInPB 1, nInPorig 1, inYstride 64, inSz 1280
 outYstride 64, outPBstride 0, outSz 1280
nInPmem_resadd 64,nInPB_resadd 1,inYstride_resadd 64,inPBstride_resadd 0 
[0] 0x0 * 0x0 -> [1] 0x0
Percentage of CC not used: 0/1 = 0.00
Percentage of ops: 40960/532480 = 0.0769
Percentage of time: 0.0003/0.0042 = 0.0769

  SFT_SpConv INDP id 1 in=(Z1, H1, W1, P64) out=(Z1, H1, W1, P64) k=Z1xH1xW1 d=Z1xH1xW1 p=Z0Ze0xT0B0xL0R0
img 0, out_ret 0, swrun 0 nonlin relu resadd 0 nmfmp : 1
nOutPorig 32, nOutPmfm 32, nOutP 64, nOutPmem 64
 nInPmem 64, inPBstride 0, nOutPB 1, nInPB 1, nInPorig 32, inYstride 64, inSz 1280
 outYstride 64, outPBstride 64, outSz 1280
nInPmem_resadd 64,nInPB_resadd 1,inYstride_resadd 64,inPBstride_resadd 0 
[1] 0x0 * 0x0 -> [0] 0x0
Percentage of CC not used: 0/1 = 0.00
Percentage of ops: 163840/532480 = 0.3077
Percentage of time: 0.0013/0.0042 = 0.3077

  SFT_SpConv INDP id 2 in=(Z1, H1, W1, P64) out=(Z1, H1, W1, P64) k=Z1xH1xW1 d=Z1xH1xW1 p=Z0Ze0xT0B0xL0R0
img 0, out_ret 0, swrun 0 nonlin relu resadd 0 nmfmp : 1
nOutPorig 32, nOutPmfm 32, nOutP 64, nOutPmem 64
 nInPmem 64, inPBstride 64, nOutPB 1, nInPB 1, nInPorig 32, inYstride 64, inSz 1280
 outYstride 64, outPBstride 64, outSz 1280
nInPmem_resadd 64,nInPB_resadd 1,inYstride_resadd 64,inPBstride_resadd 0 
[0] 0x0 * 0x0 -> [1] 0x0
Percentage of CC not used: 0/1 = 0.00
Percentage of ops: 163840/532480 = 0.3077
Percentage of time: 0.0013/0.0042 = 0.3077

  SFT_SpConv INDP id 3 in=(Z1, H1, W1, P64) out=(Z1, H1, W1, P64) k=Z1xH1xW1 d=Z1xH1xW1 p=Z0Ze0xT0B0xL0R0
img 0, out_ret 1, swrun 0 nonlin no_relu resadd 0 nmfmp : 1
nOutPorig 3, nOutPmfm 3, nOutP 64, nOutPmem 64
 nInPmem 64, inPBstride 64, nOutPB 1, nInPB 1, nInPorig 32, inYstride 64, inSz 1280
 outYstride 64, outPBstride 64, outSz 1280
nInPmem_resadd 64,nInPB_resadd 1,inYstride_resadd 64,inPBstride_resadd 0 
[1] 0x0 * 0x0 -> [0] 0x0
Percentage of CC not used: 0/1 = 0.00
Percentage of ops: 163840/532480 = 0.3077
Percentage of time: 0.0013/0.0042 = 0.3077

 End of ie_compile. It took 0.0226 [s] 
================================================================
================================================================
ie_init: Init inference engine Hardware
fwdnxt binary to be read is save.bin 
-----------------------------------------------------------
Using FPGA 0x852 Device 0852
Finished setting up the FPGAs
End of ie_init. It took 0.7861 [s] 
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 0.6860 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0352 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 4.4861 [ms]
Time to arrange output is 0.0171 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 3.0078 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0300 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 1.7471 [ms]
Time to arrange output is 0.0840 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 3.4790 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0298 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 1.6030 [ms]
Time to arrange output is 0.0691 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 0.1521 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0281 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 1.5320 [ms]
Time to arrange output is 0.0681 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 0.6370 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0251 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 1.3970 [ms]
Time to arrange output is 0.0630 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 0.1282 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0242 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0010 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 1.3560 [ms]
Time to arrange output is 0.0620 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 1.4138 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0239 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 3.0688 [ms]
Time to arrange output is 0.0581 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 2.3379 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0220 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 1.2441 [ms]
Time to arrange output is 0.0540 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 2.5220 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0210 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 8.2000 [ms]
Time to arrange output is 0.0559 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 2.2200 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0190 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 1.1260 [ms]
Time to arrange output is 0.0520 [ms]
-----------------------------------------------------------
================================================================
Run inference engine's Software version
iter 0
================================================================
ie_putinput_internal: send input to inference engine
Input size given is 80 elements
-----------------------------------------------------------
Total batchsize given is 1
Max number of FPGAs is 1, number of FPGAs used is 1
Max number of clusters is 1
Number of clusters used per image is 1
-----------------------------------------------------------
Rearrange input and convert float to int took 0.5671 [ms]
-----------------------------------------------------------
Move input to main memory took 0.0220 [ms]
-----------------------------------------------------------
inference engine hardware execution took 0.0000 [ms]
-----------------------------------------------------------
inference engine's version software start
Running software version took 1.0720 [ms]
Time to arrange output is 0.0491 [ms]
-----------------------------------------------------------
================================================================
